<?php
/*
 * This file is part of the Gallery package.
 * (c) Michal Giergielewicz <michal@giergielewicz.pl>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Freyr\GalleryBundle\Repository;

use Doctrine\ODM\MongoDB\Cursor;
use Doctrine\ODM\MongoDB\DocumentRepository;
use Freyr\GalleryBundle\Document\Image;

/**
 * ImageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ImageRepository extends DocumentRepository
{
    /**
     * @param $keyword
     * @param $imageId
     * @return Image
     */
    public function getByKeywordAndId($keyword, $imageId)
    {
        return $this->findOneBy(["keywords.name" => $keyword, "id" => new \MongoId($imageId)]);
    }

    /**
     * @return Cursor
     */
    public function getAllUniqueKeywords()
    {
        return $this->createQueryBuilder()->distinct('keywords.name')->getQuery()->execute();
    }

    /**
     * @param array $keywords
     * @return array
     */
    public function getByKeywords(array $keywords)
    {

        $cursor = $this->createQueryBuilder('')
            ->field('keywords.name')
            ->in($keywords)
            ->getQuery()->execute();

        $images = [];
        /** @var Image $image */
        foreach($cursor as $image)
        {
            $image->setCurrentKeyword($keywords);
            $images[] = $image;
        }

        return $images;
    }

    /**
     * @param Image $image
     */
    public function save(Image $image)
    {
        $this->getDocumentManager()->persist($image);
        $this->getDocumentManager()->flush();
    }

    /**
     * @param $name
     * @param $limit
     * @return Image
     */
    public function getRandomImageByKeyword($name, $limit)
    {
        /** @var Cursor $cursor */
        $images = $this->findBy(['keywords.name' => $name], ["limit" => $limit]);
        return $images[array_rand($images)];
    }
}
